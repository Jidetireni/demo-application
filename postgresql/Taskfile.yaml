version: "3"

vars:
  IMAGE_REPO: tireni/demoapp-db-migrate
  IMAGE_TAG: v1.0.0
  DB_CONTAINER_NAME: 
  DB_NETWORK: 
  POSTGRES_USER: 
  POSTGRES_PASSWORD: 
  POSTGRES_DB_NAME: 
  DB_VOLUME: 
  
tasks:
  run-postgres:
    desc: Start postgres container
    cmds:
      - echo Starting postgres container
      - docker network inspect {{.DB_NETWORK}} >/dev/null 2>&1 || docker network create {{.DB_NETWORK}}

      - |
        docker run -d \
          --name {{.DB_CONTAINER_NAME}} \
          --network {{.DB_NETWORK}} \
          --network-alias db \
          -e POSTGRES_USER={{.POSTGRES_USER}} \
          -e POSTGRES_PASSWORD={{.POSTGRES_PASSWORD}} \
          -e POSTGRES_DB={{.POSTGRES_DB_NAME}} \
          -v pgdata:/var/lib/postgresql/data \
          -p 5432:5432 \
          postgres:16.3-alpine

  run-psql-init-script:
    desc: Execute psql commands
    cmds:
      - |
        CONTAINER_ID=$(docker ps -q --filter name={{.DB_CONTAINER_NAME}})
        if [ -z "$CONTAINER_ID" ]; then
          echo "Error: Container {{.DB_CONTAINER_NAME}} not found."
          exit 1
        fi
        docker cp ./migrations/000001_create_users_table.up.sql $CONTAINER_ID:/tmp/
        docker exec $CONTAINER_ID psql -U "{{.POSTGRES_USER}}" -d "{{.POSTGRES_DB_NAME}}" -f /tmp/000001_create_users_table.up.sql

  build-container-image:
    desc: Build container image
    cmds:
      - docker build -t {{.IMAGE_REPO}}{{.IMAGE_TAG}} .
